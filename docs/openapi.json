{
  "externalDocs": {
    "description": "Replicate HTTP API",
    "url": "https://replicate.com/docs/reference/http"
  },
  "info": {
    "contact": {
      "email": "team@replicate.com"
    },
    "description": "A web service for running Replicate models",
    "termsOfService": "https://replicate.com/terms",
    "title": "Replicate HTTP API",
    "version": "1.0.0-a1"
  },
  "openapi": "3.1.0",
  "paths": {
    "/v1/collections": {
      "get": {
        "description": "Example cURL request:\n\n```console\n$ curl -s \\\n-H \"Authorization: Token \u003cpaste-your-token-here\u003e\" \\\nhttps://api.replicate.com/v1/collections\n```\n\nThe response is a JSON object in the following format:\n\n```json\n{\n  \"previous\": null,\n  \"next\": \"https://api.replicate.com/v1/collections?cursor=MDY2MGQyMjI1MTgzMzJlZmIyYzZmN2Q4MjQzZDkyMzBkN2NiOGM1MTZl\",\n  \"results\": [{}, {}, {}]\n}\n```\n\nThe `results` key is a list of collection objects:\n\n```json\n{\n  \"name\": \"Super resolution\",\n  \"slug\": \"super-resolution\",\n  \"description\": \"Upscaling models that create high-quality images from low-quality images.\",\n}\n```\n",
        "operationId": "collections.list",
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "List collections of models"
      }
    },
    "/v1/collections/{collection_slug}": {
      "get": {
        "description": "Example cURL request:\n\n```console\n$ curl -s \\\n-H \"Authorization: Token \u003cpaste-your-token-here\u003e\" \\\nhttps://api.replicate.com/v1/collections/super-resolution\n```\n\nThe response is a collection object with a nested list of model objects within that collection:\n\n```json\n{\n  \"name\": \"Super resolution\",\n  \"slug\": \"super-resolution\",\n  \"description\": \"Upscaling models that create high-quality images from low-quality images.\",\n  \"models\": [...]\n}\n```\n",
        "operationId": "collections.get",
        "parameters": [
          {
            "description": "The slug of the collection, like `super-resolution` or `image-restoration`. See [replicate.com/collections](https://replicate.com/collections)\n",
            "in": "path",
            "name": "collection_slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get a collection of models"
      }
    },
    "/v1/models/{model_owner}/{model_name}": {
      "get": {
        "description": "Example cURL request:\n\n```console\n$ curl -s \\\n-H \"Authorization: Token \u003cpaste-your-token-here\u003e\" \\\nhttps://api.replicate.com/v1/models/replicate/hello-world\n```\n\nThe response is a model object in the following format:\n\n```json\n{\n  \"url\": \"https://replicate.com/replicate/hello-world\",\n  \"owner\": \"replicate\",\n  \"name\": \"hello-world\",\n  \"description\": \"A tiny model that says hello\",\n  \"visibility\": \"public\",\n  \"github_url\": \"https://github.com/replicate/cog-examples\",\n  \"paper_url\": null,\n  \"license_url\": null,\n  \"run_count\": 12345,\n  \"cover_image_url\": null,\n  \"default_example\": {...}\n  \"latest_version\": {...}\n}\n```\n\nThe `cover_image_url` string is an HTTPS URL for an image file. This can be:\n\n- An image uploaded by the model author.\n- The output file of the example prediction, if the model author has not set a cover image.\n- The input file of the example prediction, if the model author has not set a cover image and the example prediction has no output file.\n- A generic fallback image.\n\nThe `default_example` object is a [prediction](#predictions.get) created with this model.\n\nThe `latest_version` object is the model's most recently pushed [version](#models.versions.get).\n",
        "operationId": "models.get",
        "parameters": [
          {
            "description": "The name of the user or organization that owns the model.\n",
            "in": "path",
            "name": "model_owner",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the model.\n",
            "in": "path",
            "name": "model_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get a model"
      }
    },
    "/v1/models/{model_owner}/{model_name}/versions": {
      "get": {
        "description": "Example cURL request:\n\n```console\n$ curl -s \\\n-H \"Authorization: Token \u003cpaste-your-token-here\u003e\" \\\nhttps://api.replicate.com/v1/models/replicate/hello-world/versions\n```\n\nThe response is a JSON array of Version objects, sorted with the most recent version first:\n\n```json\n{\n  \"previous\": null,\n  \"next\": null,\n  \"results\": [\n    {\n      \"id\": \"5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\",\n      \"created_at\": \"2022-04-26T19:29:04.418669Z\",\n      \"cog_version\": \"0.3.0\",\n      \"openapi_schema\": {...}\n    },\n    {\n      \"id\": \"e2e8c39e0f77177381177ba8c4025421ec2d7e7d3c389a9b3d364f8de560024f\",\n      \"created_at\": \"2022-03-21T13:01:04.418669Z\",\n      \"cog_version\": \"0.3.0\",\n      \"openapi_schema\": {...}\n    }\n  ]\n}\n```\n",
        "operationId": "models.versions.list",
        "parameters": [
          {
            "description": "The name of the user or organization that owns the model.\n",
            "in": "path",
            "name": "model_owner",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the model.\n",
            "in": "path",
            "name": "model_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "List model versions"
      }
    },
    "/v1/models/{model_owner}/{model_name}/versions/{version_id}": {
      "delete": {
        "description": "Delete a model version and all associated predictions, including all output files.\n\nRestrictions:\n\n- You can only delete versions from models you own.\n- You can only delete versions from private models.\n- You cannot delete a version if a user other than you has run predictions with it.\n\nExample cURL request:\n\n```command\n$ curl -s -X DELETE \\\n-H \"Authorization: Token \u003cpaste-your-token-here\u003e\" \\\nhttps://api.replicate.com/v1/models/replicate/hello-world/versions/5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\n```\n\nThe response is an empty 202, indicating the deletion request has been accepted. It might take a few minutes to be processed.\n",
        "operationId": "models.versions.delete",
        "parameters": [
          {
            "description": "The name of the user or organization that owns the model.\n",
            "in": "path",
            "name": "model_owner",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the model.\n",
            "in": "path",
            "name": "model_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the version.\n",
            "in": "path",
            "name": "version_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Deletion request has been accepted. It might take a few minutes to be processed."
          }
        },
        "summary": "Delete a model version"
      },
      "get": {
        "description": "Example cURL request:\n\n```console\n$ curl -s \\\n-H \"Authorization: Token \u003cpaste-your-token-here\u003e\" \\\nhttps://api.replicate.com/v1/models/replicate/hello-world/versions/5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\n```\n\nThe response is the version object:\n\n```json\n{\n  \"id\": \"5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\",\n  \"created_at\": \"2022-04-26T19:29:04.418669Z\",\n  \"cog_version\": \"0.3.0\",\n  \"openapi_schema\": {...}\n}\n```\n\nEvery model describes its inputs and outputs with [OpenAPI Schema Objects](https://spec.openapis.org/oas/latest.html#schemaObject) in the `openapi_schema` property.\n\nThe `openapi_schema.components.schemas.Input` property for the [replicate/hello-world](https://replicate.com/replicate/hello-world) model looks like this:\n\n```json\n{\n  \"type\": \"object\",\n  \"title\": \"Input\",\n  \"required\": [\n    \"text\"\n  ],\n  \"properties\": {\n    \"text\": {\n      \"x-order\": 0,\n      \"type\": \"string\",\n      \"title\": \"Text\",\n      \"description\": \"Text to prefix with 'hello '\"\n    }\n  }\n}\n```\n\nThe `openapi_schema.components.schemas.Output` property for the [replicate/hello-world](https://replicate.com/replicate/hello-world) model looks like this:\n\n```json\n{\n  \"type\": \"string\",\n  \"title\": \"Output\"\n}\n```\n\nFor more details, see the docs on [Cog's supported input and output types](https://github.com/replicate/cog/blob/75b7802219e7cd4cee845e34c4c22139558615d4/docs/python.md#input-and-output-types)\n",
        "operationId": "models.versions.get",
        "parameters": [
          {
            "description": "The name of the user or organization that owns the model.\n",
            "in": "path",
            "name": "model_owner",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the model.\n",
            "in": "path",
            "name": "model_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the version.\n",
            "in": "path",
            "name": "version_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get a model version"
      }
    },
    "/v1/models/{model_owner}/{model_name}/versions/{version_id}/trainings": {
      "post": {
        "description": "Train a model on Replicate.\n\nTo find out which models can be trained, check out the [trainable language models collection](https://replicate.com/collections/trainable-language-models).\n\nExample request body:\n\n```json\n{\n  \"destination\": \"{new_owner}/{new_name}\",\n  \"input\": {\n    \"train_data\": \"https://example.com/70k_samples.jsonl\",\n  },\n  \"webhook\": \"https://example.com/my-webhook\",\n}\n```\n\nExample cURL request:\n\n```console\n$ curl -s -X POST \\\n  -d '{\"destination\": \"{new_owner}/{new_name}\", \"input\": {\"train_data\": \"https://example.com/70k_samples.jsonl\"}}' \\\n  -H \"Authorization: Token \u003cpaste-your-token-here\u003e\" \\\n  -H 'Content-Type: application/json' \\\n  https://api.replicate.com/v1/models/{model_owner}/{model_name}/versions/{version_id}/trainings\n```\n\nExample response:\n\n```json\n{\n  \"id\": \"zz4ibbonubfz7carwiefibzgga\",\n  \"version\": \"3ae0799123a1fe11f8c89fd99632f843fc5f7a761630160521c4253149754523\",\n  \"status\": \"starting\",\n  \"input\": {\n    \"train_data\": \"https://example.com/70k_samples.jsonl\",\n  },\n  \"output\": null,\n  \"error\": null,\n  \"logs\": null,\n  \"started_at\": null,\n  \"created_at\": \"2023-03-28T21:47:58.566434Z\",\n  \"completed_at\": null\n}\n```\n\nWhen a training completes, it creates a new [version](https://replicate.com/docs/how-does-replicate-work#terminology) of the model at the specified destination.\n",
        "operationId": "trainings.create",
        "parameters": [
          {
            "description": "The name of the user or organization that owns the model.\n",
            "in": "path",
            "name": "model_owner",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the model.\n",
            "in": "path",
            "name": "model_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the version.\n",
            "in": "path",
            "name": "version_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "destination": {
                    "description": "A string representing the desired model to push to in the format `{destination_model_owner}/{destination_model_name}`. This should be an existing model owned by the user or organization making the API request. If the destination is invalid, the server returns an appropriate 4XX response.",
                    "type": "string"
                  },
                  "input": {
                    "description": "An object containing inputs to the Cog model's `train()` function.",
                    "type": "object"
                  },
                  "webhook": {
                    "description": "An HTTPS URL for receiving a webhook when the training completes. The webhook will be a POST request where the request body is the same as the response body of the [get training](#trainings.get) operation. If there are network problems, we will retry the webhook a few times, so make sure it can be safely called more than once.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          }
        },
        "summary": "Create a training",
        "x-feature-flag": "training_api"
      }
    },
    "/v1/predictions": {
      "get": {
        "description": "Get a paginated list of predictions that you've created with your account. This includes predictions created from the API and the Replicate website. Returns 100 records per page.\n\nExample cURL request:\n\n```console\n$ curl -s \\\n  -H \"Authorization: Token \u003cpaste-your-token-here\u003e\" \\\n  https://api.replicate.com/v1/predictions\n```\n\nThe response is a JSON object in the following format:\n\n```json\n{\n  \"previous\": null,\n  \"next\": \"https://api.replicate.com/v1/predictions?cursor=cD0yMDIyLTAxLTIxKzIzJTNBMTglM0EyNC41MzAzNTclMkIwMCUzQTAw\",\n  \"results\": [{}, {}, {}]\n}\n```\n\nThe `results` key is a list of prediction objects in the following format:\n\n```json\n{\n  \"id\": \"jpzd7hm5gfcapbfyt4mqytarku\",\n  \"version\": \"b21cbe271e65c1718f2999b038c18b45e21e4fba961181fbfae9342fc53b9e05\",\n  \"urls\": {\n    \"get\": \"https://api.replicate.com/v1/predictions/jpzd7hm5gfcapbfyt4mqytarku\",\n    \"cancel\": \"https://api.replicate.com/v1/predictions/jpzd7hm5gfcapbfyt4mqytarku/cancel\"\n  },\n  \"created_at\": \"2022-04-26T20:00:40.658234Z\",\n  \"started_at\": \"2022-04-26T20:00:84.583803Z\",\n  \"completed_at\": \"2022-04-26T20:02:27.648305Z\",\n  \"source\": \"web\",\n  \"status\": \"succeeded\"\n}\n```\n\n- `id`: The unique ID of the prediction. Can be used to [get a single prediction](#predictions.get).\n- `version`: The unique ID of model version used to create the prediction.\n- `urls`: A convenience object that can be used to construct new API requests against the given prediction.\n- `source`: Indicates where the prediction was created. Possible values are `web` or `api`.\n- `status`: Status of the prediction. Refer to [get a single prediction](#predictions.get) for possible values.\n",
        "operationId": "predictions.list",
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "List predictions"
      },
      "post": {
        "description": "Calling this operation starts a new prediction for the version and inputs you provide. As models can take several seconds or more to run, the output will not be available immediately. To get the final result of the prediction you should either provide a `webhook` URL for us to call when the results are ready, or poll the [get a prediction](#predictions.get) endpoint until it has one of the terminated statuses.\n\nInput and output (including any files) are automatically deleted after an hour, so you must save a copy of any files in the output if you'd like to continue using them.\n\nExample request body:\n\n```json\n{\n  \"version\": \"5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\",\n  \"input\": {\n    \"text\": \"Alice\"\n  }\n}\n```\n\nExample cURL request:\n\n```console\n$ curl -s -X POST \\\n  -d '{\"version\": \"5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\", \"input\": {\"text\": \"Alice\"}}' \\\n  -H \"Authorization: Token \u003cpaste-your-token-here\u003e\" \\\n  -H 'Content-Type: application/json' \\\n  https://api.replicate.com/v1/predictions\n```\n\nExample response:\n\n```json\n{\n  \"id\": \"ufawqhfynnddngldkgtslldrkq\",\n  \"version\": \"5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\",\n  \"urls\": {\n    \"get\": \"https://api.replicate.com/v1/predictions/ufawqhfynnddngldkgtslldrkq\",\n    \"cancel\": \"https://api.replicate.com/v1/predictions/ufawqhfynnddngldkgtslldrkq/cancel\",\n  },\n  \"created_at\": \"2022-04-26T22:13:06.224088Z\",\n  \"status\": \"starting\",\n  \"input\": {\n    \"text\": \"Alice\"\n  },\n  \"error\": null,\n  \"logs\": \"\",\n}\n```\n",
        "operationId": "predictions.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "input": {
                    "description": "The model's input as a JSON object. The input depends on what model you are running. To see the available inputs, click the \"Run with API\" tab on the model you are running. For example, stability-ai/stable-diffusion takes prompt as an input.\n\nFiles should be passed as data URLs or HTTPS URLs.\n",
                    "type": "object"
                  },
                  "stream": {
                    "description": "Request a URL to receive streaming output using  [server-sent events (SSE)](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events).\nIf the requested model version supports streaming, then the returned prediction will have a `stream` entry in its `urls` property with a URL that you can use to construct an [`EventSource`](https://developer.mozilla.org/en-US/docs/Web/API/EventSource).\n",
                    "type": "boolean"
                  },
                  "version": {
                    "description": "The ID of the model version that you want to run.",
                    "type": "string"
                  },
                  "webhook": {
                    "description": "An HTTPS URL for receiving a webhook when the prediction has new output. The webhook will be a POST request where the request body is the same as the response body of the [get prediction](#predictions.get) operation. If there are network problems, we will retry the webhook a few times, so make sure it can be safely called more than once.",
                    "type": "string"
                  },
                  "webhook_events_filter": {
                    "description": "By default, we will send requests to your webhook URL whenever there are new logs, new outputs, or the prediction has finished. You can change which events trigger webhook requests by specifying `webhook_events_filter` in the prediction request.\n\n* `start`: immediately on prediction start\n* `output`: each time a prediction generates an output (note that predictions can generate multiple outputs)\n* `logs`: each time log output is generated by a prediction\n* `completed`: when the prediction reaches a terminal state (succeeded/canceled/failed)\n\nFor example, if you only wanted requests to be sent at the start and end of the prediction, you would provide:\n\n```json\n{\n  \"version\": \"5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\",\n  \"input\": {\n    \"text\": \"Alice\"\n  },\n  \"webhook\": \"https://example.com/my-webhook\",\n  \"webhook_events_filter\": [\"start\", \"completed\"]\n}\n```\n\nRequests for event types `output` and `logs` will be sent at most once every 500ms. If you request `start` and `completed` webhooks, then they'll always be sent regardless of throttling.\n",
                    "items": {
                      "enum": [
                        "start",
                        "output",
                        "logs",
                        "completed"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Create a prediction"
      }
    },
    "/v1/predictions/{prediction_id}": {
      "get": {
        "description": "Returns the same response as the [create a prediction](#predictions.create) operation. `status` will be one of:\n\n- `starting`: the prediction is starting up. If this status lasts longer than a few seconds, then it's typically because a new worker is being started to run the prediction.\n- `processing`: the `predict()` method of the model is currently running.\n- `succeeded`: the prediction completed successfully.\n- `failed`: the prediction encountered an error during processing.\n- `canceled`: the prediction was canceled by the user.\n\nIn the case of success, `output` will be an object containing the output of the model. Any files will be represented as URLs. You'll need to pass the `Authorization` header to request them.\n\nIn the case of failure, `error` will contain the error encountered during the prediction.\n\nTerminated predictions (with a status of `succeeded`, `failed` or `canceled`) include a `metrics` object with a `predict_time` property showing the amount of CPU or GPU time, in seconds, that this prediction used while running. This is the time you're billed for, and it doesn't include time waiting for the prediction to start.\n\nExample cURL request:\n\n```console\n$ curl -s \\\n-H \"Authorization: Token \u003cpaste-your-token-here\u003e\" \\\nhttps://api.replicate.com/v1/predictions/rrr4z55ocneqzikepnug6xezpe\n```\n\nThe response is the prediction object:\n\n```json\n{\n  \"id\": \"rrr4z55ocneqzikepnug6xezpe\",\n  \"version\": \"be04660a5b93ef2aff61e3668dedb4cbeb14941e62a3fd5998364a32d613e35e\",\n  \"urls\": {\n    \"get\": \"https://api.replicate.com/v1/predictions/rrr4z55ocneqzikepnug6xezpe\",\n    \"cancel\": \"https://api.replicate.com/v1/predictions/rrr4z55ocneqzikepnug6xezpe/cancel\"\n  },\n  \"created_at\": \"2022-09-13T22:54:18.578761Z\",\n  \"started_at\": \"2022-09-13T22:54:19.438525Z\",\n  \"completed_at\": \"2022-09-13T22:54:23.236610Z\",\n  \"source\": \"api\",\n  \"status\": \"succeeded\",\n  \"input\": {\n    \"prompt\": \"oak tree with boletus growing on its branches\"\n  },\n  \"output\": [\n    \"https://replicate.com/api/models/stability-ai/stable-diffusion/files/9c3b6fe4-2d37-4571-a17a-83951b1cb120/out-0.png\"\n  ],\n  \"error\": null,\n  \"logs\": \"Using seed: 36941...\",\n  \"metrics\": {\n    \"predict_time\": 4.484541\n  }\n}\n```\n",
        "operationId": "predictions.get",
        "parameters": [
          {
            "description": "The ID of the prediction you want to get.\n",
            "in": "path",
            "name": "prediction_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get a prediction"
      }
    },
    "/v1/predictions/{prediction_id}/cancel": {
      "post": {
        "operationId": "predictions.cancel",
        "parameters": [
          {
            "description": "The ID of the prediction you want to cancel.\n",
            "in": "path",
            "name": "prediction_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Cancel a prediction"
      }
    },
    "/v1/trainings": {
      "get": {
        "description": "Get a paginated list of trainings that you've created with your account. Returns 100 records per page.\n\nExample cURL request:\n\n```console\n$ curl -s \\\n  -H \"Authorization: Token \u003cpaste-your-token-here\u003e\" \\\n  https://api.replicate.com/v1/trainings\n```\n\nThe response is a JSON object in the following format:\n\n```json\n{\n  \"previous\": null,\n  \"next\": \"https://api.replicate.com/v1/trainings?cursor=cD0yMDIyLTAxLTIxKzIzJTNBMTglM0EyNC41MzAzNTclMkIwMCUzQTAw\",\n  \"results\": [{}, {}, {}]\n}\n```\n\nThe `results` key is a list of training objects in the following format:\n\n```json\n{\n  \"id\": \"jpzd7hm5gfcapbfyt4mqytarku\",\n  \"version\": \"b21cbe271e65c1718f2999b038c18b45e21e4fba961181fbfae9342fc53b9e05\",\n  \"urls\": {\n    \"get\": \"https://api.replicate.com/v1/trainings/jpzd7hm5gfcapbfyt4mqytarku\",\n    \"cancel\": \"https://api.replicate.com/v1/trainings/jpzd7hm5gfcapbfyt4mqytarku/cancel\"\n  },\n  \"created_at\": \"2022-04-26T20:00:40.658234Z\",\n  \"started_at\": \"2022-04-26T20:00:84.583803Z\",\n  \"completed_at\": \"2022-04-26T20:02:27.648305Z\",\n  \"source\": \"web\",\n  \"status\": \"succeeded\"\n}\n```\n\n- `id`: The unique ID of the training. Can be used to [get a single training](#trainings.get).\n- `version`: The unique ID of model version used to create the training.\n- `urls`: A convenience object that can be used to construct new API requests against the given training.\n- `source`: Indicates where the training was created. Possible values are `web` or `api`.\n- `status`: Status of the training. Refer to [get a single training](#trainings.get) for possible values.\n",
        "operationId": "trainings.list",
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "List trainings",
        "x-feature-flag": "training_api"
      }
    },
    "/v1/trainings/{training_id}": {
      "get": {
        "description": "Returns a training object.\n\nExample cURL request:\n\n```console\n$ curl -s \\\n-H \"Authorization: Token \u003cpaste-your-token-here\u003e\" \\\nhttps://api.replicate.com/v1/trainings/rrr4z55ocneqzikepnug6xezpe\n```\n\nThe response is the training object:\n\n```json\n{\n  \"id\": \"zz4ibbonubfz7carwiefibzgga\",\n  \"version\": \"3ae0799123a1fe11f8c89fd99632f843fc5f7a761630160521c4253149754523\",\n  \"status\": \"succeeded\",\n  \"input\": {\n    \"train_data\": \"https://example.com/70k_samples.jsonl\"\n  },\n  \"output\": {\n    \"version\": \"...\"\n  },\n  \"error\": null,\n  \"logs\": null,\n  \"webhook_completed\": null,\n  \"started_at\": null,\n  \"created_at\": \"2023-03-28T21:47:58.566434Z\",\n  \"completed_at\": null\n}\n```\n",
        "operationId": "trainings.get",
        "parameters": [
          {
            "description": "The ID of the training you want to get.\n",
            "in": "path",
            "name": "training_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get a training",
        "x-feature-flag": "training_api"
      }
    },
    "/v1/trainings/{training_id}/cancel": {
      "post": {
        "operationId": "trainings.cancel",
        "parameters": [
          {
            "description": "The ID of the training you want to cancel.\n",
            "in": "path",
            "name": "training_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Cancel a training",
        "x-feature-flag": "training_api"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.replicate.com/v1"
    }
  ]
}
